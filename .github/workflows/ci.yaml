name: Build and deploy
on:
  push:
    branches:
      - '**'
      - '!release'

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-maven/setup@v7.0.5
        with:
          repositories: maven-central=https://repo.maven.apache.org/maven2,github-packages=https://maven.pkg.github.com/navikt/maven-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: mvn install -B -e
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker image build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker image push ${IMAGE}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          path: deploy
      - name: Deploy main branch to dev-gcp
        if: github.ref == 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
      - name: Deploy feature to dev-gcp
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml

  run-tests-for-opprett-oppgave:
    runs-on: ubuntu-latest
    name: "Run tests: opprett-forsendelse"
    needs: deploy

    env:
      INGRESS_DOKUMENT_FORSENDELSE: https://bidrag-dokument-forsendelse.dev.intern.nav.no

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_DOKUMENT_FORSENDELSE=https://bidrag-dokument-forsendelse-feature.dev.intern.nav.no" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
                -H "Authorization: Basic ${{ secrets.BIDRAG_CUCUMBER_CLOUD_AUTH }}" \
               --request POST \
               --data '{"noContextPathForApps":["bidrag-dokument-forsendelse"],"ingressesForApps":[
                   "${{ env.INGRESS_DOKUMENT_FORSENDELSE }}@tag:bidrag-dokument-forsendelse"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)


